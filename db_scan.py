# -*- coding: utf-8 -*-
"""dbscan.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oaMZUyW9IJvs5HWNxbBijAS-MR7eqlk4
"""

import numpy as np
import math
import matplotlib.pyplot as plt
from sklearn.datasets import make_blobs
from sklearn.cluster import KMeans
plot = 0

def distance(x,y):
  x = np.array(x)
  y = np.array(y)
  dist = np.linalg.norm(x - y)
  return dist
#---------------------------------------------
#this method show epsilon space

def eps_neighborhood(x,y,eps):
	return distance(x,y) < eps
#-------------------------------------------------
#this method show epsilon space

def region_query(X,p,eps):
  dist_list = list()
  for count,value in enumerate(X):
    if eps_neighborhood(value,p,eps):
      dist_list.append(count)
  return dist_list


def expandCluster(X,neighbor,eps,visited):
  # print(np.sum(visited))
  counter_for = 0
  counter_visited = 0
  count = 0
  while(True):
    if count >= len(neighbor):
      break

    value = neighbor[count]
    print("counter_for: " , str(counter_for))
    counter_for += 1
    # print(count , value)
    # print(visited[neighbor[count]])
    if not visited[neighbor[count]]:
      print("counter_visited: ", str(counter_visited))
      counter_visited += 1
      visited[neighbor[count]] = 1
      n = region_query(X, X[value],eps)
      neighbor = neighbor + n

    count += 1
  return visited
#neighbor = list(set(neighbor))
  #print(neighbor)


if __name__ == "__main__":

    print("mian scope-1")
    # generate some random cluster data
    X, y = make_blobs(random_state=170, n_samples=600, centers = 5)
    rng = np.random.RandomState(74)
    # transform the data to be stretched
    transformation = rng.normal(size=(2, 2))
    X = np.dot(X, transformation)
    # plot
    plt.scatter(X[:, 0], X[:, 1])
    plt.scatter(X[ 0, 0], X[0, 1] , c= 'red')
    plt.xlabel("Feature 0")
    plt.ylabel("Feature 1")
    plt.show()

    eps = 0.5
    neighbor = region_query(X , X[0 , :], eps)
    print("mian scope-2")
    visited = np.zeros(len(X))
    visited[0] = 1
    visited = expandCluster(X,neighbor,eps , visited)



# # plot
plt.figure(figsize=(8, 8), dpi=100)
plt.scatter(X[:, 0], X[:, 1])
plt.scatter(X[ 0, 0], X[0, 1] , c= 'red')
plt.scatter(X[ visited[:]==1, 0], X[visited[:]==1, 1] , c= 'yellow')
plt.xlabel("Feature 0")
plt.ylabel("Feature 1")
plt.show()

